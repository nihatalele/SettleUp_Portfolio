<p style="color: green"><%= notice %></p>

<% content_for :title, "Trip Details" %>

<h1>Trip Details</h1>
<div><%= render @trip %></div>

<div>
  <% if @trip.currency.present? %>
    <h2>Total Expenses in <%= currency_symbol(@trip.currency) %>:</h2>
    <p>
      <strong>
        <%= number_to_currency(
              @trip.expenses.sum { |e| convert_to_trip_currency(e) },
              unit: currency_symbol(@trip.currency)
            ) %>
      </strong>
    </p>
  <% else %>
    <p class="text-danger">Trip currency not set.</p>
  <% end %>
</div>

<div>
  <h2>Participants</h2>
  <ul>
    <% @trip.participants.each do |participant| %>
      <li>
        <strong><%= participant.name %></strong>
        (<%= mail_to participant.email %>)
        <%= link_to "Summary",
                    trip_participant_path(@trip, participant),
                    class: "btn btn-sm btn-secondary ms-2" %>
        <%= link_to "Expenses",
                    trip_participant_expenses_path(@trip, participant),
                    class: "btn btn-sm btn-secondary ms-1" %>
      </li>
    <% end %>
  </ul>
  <%= link_to "Add Participant",
              new_trip_participant_path(@trip),
              class: "btn btn-outline-primary mt-2" %>
</div>

<div>
  <% if @trip.currency.present? %>
    <h2>Settle Up!</h2>
    <p>Here are the amounts each participant owes to each other</p>
    <p>Rows represent the payer, columns the receiver</p>

    <table class="table" data-trip-id="<%= @trip.id %>">
      <thead>
        <tr>
          <th></th>
          <% @trip.participants.each do |p| %>
            <th><%= p.name %></th>
          <% end %>
        </tr>
      </thead>
      <tbody>
        <% @trip.participants.each do |payer| %>
          <tr>
            <th><%= payer.name %></th>
            <% @trip.participants.each do |receiver| %>
              <% if payer == receiver %>
                <td class="text-center">–</td>
              <% else %>
                <% bal = payer.net_balance(receiver) %>
                <td>
                  <% if bal > 0 %>
                    <% checkbox_id = "settle_#{payer.id}_#{receiver.id}" %>
                    <div class="form-check p-2 rounded bg-danger text-white"
                         id="wrapper_<%= checkbox_id %>">
                      <%= check_box_tag checkbox_id,
                                        "1",
                                        false,
                                        class: "form-check-input settle-checkbox" %>
                      <%= label_tag checkbox_id,
                                    "#{payer.name} owes #{receiver.name}: " \
                                    "#{number_to_currency(bal, unit: currency_symbol(@trip.currency))}",
                                    class: "form-check-label ms-2" %>
                    </div>
                  <% else %>
                    <span class="text-center">–</span>
                  <% end %>
                </td>
              <% end %>
            <% end %>
          </tr>
        <% end %>
      </tbody>
    </table>
  <% else %>
    <p class="text-danger">Trip currency not set. Cannot show settle-up amounts.</p>
  <% end %>
</div>

<div class="mt-3">
  <%= link_to "Edit Trip",
              edit_trip_path(@trip),
              class: "btn btn-primary me-2" %>
  <%= link_to "Back to Trips",
              trips_path,
              class: "btn btn-secondary" %>
  <%= button_to "Delete this Trip",
                trip_path(@trip),
                method: :delete,
                data: { confirm: "Are you sure?" },
                class: "btn btn-danger ms-2" %>
</div>

<script>
  function initSettleCheckboxes() {
    const table = document.querySelector('table[data-trip-id]');
    if (!table) return;
    const tripId = table.dataset.tripId;

    document.querySelectorAll('.settle-checkbox').forEach(cb => {
      const wrapper = document.getElementById('wrapper_' + cb.id);
      const storageKey = `settled_${tripId}_${cb.id}`;

      // restore checked + green or leave red
      if (localStorage.getItem(storageKey)) {
        cb.checked = true;
        wrapper.classList.replace('bg-danger', 'bg-success');
      }

      // on toggle: swap classes & persist
      cb.addEventListener('change', () => {
        if (cb.checked) {
          wrapper.classList.replace('bg-danger', 'bg-success');
          localStorage.setItem(storageKey, '1');
        } else {
          wrapper.classList.replace('bg-success', 'bg-danger');
          localStorage.removeItem(storageKey);
        }
      });
    });
  }

  document.addEventListener('DOMContentLoaded', initSettleCheckboxes);
  document.addEventListener('turbo:load',      initSettleCheckboxes);
</script>
